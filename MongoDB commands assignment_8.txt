1. db.students.aggregate([{
    $lookup: {
      from: "courses",
      localField: "course_id",
      foreignField: "_id",
      as: "course_details"
    }},
    { $project: { name: 1, course_name: { $arrayElemAt: ["$course_details.course_name", 0] } } }
   ]);

2. db.students.aggregate([
    { $match: { score: { $gt: 75 } } }
   ]);

3. db.orders.aggregate([
    { $match: { amount: { $gt: 500 } } }, {
     $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "_id",
      as: "customer_details"}},
    { $match: { "customer_details.location": "New York" } }
   ]);

4. db.sales.aggregate([{
    $lookup: {
      from: "products",
      localField: "productId",
      foreignField: "_id",
      as: "product_details"
    }},
   { $unwind: "$product_details" },
   { $match: { "product_details.price": { $gt: 20 } } },{
    $group: {
      _id: "$productId",
      totalRevenue: { $sum: { $multiply: ["$quantity", "$product_details.price"] } }
    }}
   ]);

5. db.employees.aggregate([
    { $match: { department: { $in: ["HR", "Engineering", "Marketing"] } } }
   ]);

6. db.transactions.aggregate([
    { $match: { $or: [{ type: "credit" }, { amount: { $gt: 1000 } }] } }
   ]);

7. db.orders.aggregate([{
    $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "_id",
      as: "customer_details"
    }},
   { $match: { "customer_details.membership": { $ne: "premium" } } }
   ]);

8. db.students.aggregate([{
    $lookup: {
      from: "courses",
      localField: "courseId",
      foreignField: "_id",
      as: "course_details"
    }},
    { $unwind: "$course_details" },{
    $lookup: {
      from: "instructors",
      localField: "course_details.instructorId",
      foreignField: "_id",
      as: "instructor_details"
    }},{
     $project: {
      studentName: "$name",
      courseName: "$course_details.course_name",
      instructorName: { $arrayElemAt: ["$instructor_details.name", 0] }
     }}
   ]);

9. db.purchases.aggregate([{
    $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "_id",
      as: "customer_details"
    }},
   { $match: { "customer_details.loyaltyPoints": { $gte: 1000 } } }
   ]);

10. db.products.aggregate([{
    $match: {
      $and: [
        { category: "electronics" },
        { price: { $lt: 500 } },
        { stock: { $gt: 10 } }
     ]}}
    ]);